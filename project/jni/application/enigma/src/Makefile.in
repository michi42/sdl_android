# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS = enigma$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/codeset.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/glibc21.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intdiv0.m4 \
	$(top_srcdir)/m4/intmax.m4 $(top_srcdir)/m4/inttypes-pri.m4 \
	$(top_srcdir)/m4/inttypes.m4 $(top_srcdir)/m4/inttypes_h.m4 \
	$(top_srcdir)/m4/isc-posix.m4 $(top_srcdir)/m4/lcmessage.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/longdouble.m4 \
	$(top_srcdir)/m4/longlong.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/printf-posix.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/signed.m4 \
	$(top_srcdir)/m4/size_max.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/uintmax_t.m4 $(top_srcdir)/m4/ulonglong.m4 \
	$(top_srcdir)/m4/wchar_t.m4 $(top_srcdir)/m4/wint_t.m4 \
	$(top_srcdir)/m4/xsize.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_enigma_OBJECTS = actors.$(OBJEXT) client.$(OBJEXT) \
	DOMErrorReporter.$(OBJEXT) DOMSchemaResolver.$(OBJEXT) \
	d_models.$(OBJEXT) display.$(OBJEXT) editor.$(OBJEXT) \
	enigma.$(OBJEXT) file.$(OBJEXT) file_zip.$(OBJEXT) \
	floors.$(OBJEXT) game.$(OBJEXT) Inventory.$(OBJEXT) \
	items.$(OBJEXT) laser.$(OBJEXT) LocalToXML.$(OBJEXT) \
	lua.$(OBJEXT) lua-display.$(OBJEXT) lua-editor.$(OBJEXT) \
	lua-enigma.$(OBJEXT) lua-global.$(OBJEXT) lua-ecl.$(OBJEXT) \
	main.$(OBJEXT) netgame.$(OBJEXT) network.$(OBJEXT) \
	nls.$(OBJEXT) objects.$(OBJEXT) oxyd.$(OBJEXT) \
	ox_extra.$(OBJEXT) ox_magnum.$(OBJEXT) ox_oxyd1.$(OBJEXT) \
	ox_peroxyd.$(OBJEXT) options.$(OBJEXT) player.$(OBJEXT) \
	PreferenceManager.$(OBJEXT) PropertyManager.$(OBJEXT) \
	server.$(OBJEXT) sound.$(OBJEXT) StateManager.$(OBJEXT) \
	stones.$(OBJEXT) stones_simple.$(OBJEXT) \
	stones_complex.$(OBJEXT) st_switches.$(OBJEXT) \
	Utf8ToXML.$(OBJEXT) util.$(OBJEXT) utilXML.$(OBJEXT) \
	video.$(OBJEXT) world.$(OBJEXT) XMLtoLocal.$(OBJEXT) \
	XMLtoUtf8.$(OBJEXT) ErrorMenu.$(OBJEXT) GameMenu.$(OBJEXT) \
	HelpMenu.$(OBJEXT) InfoMenu.$(OBJEXT) LevelInspector.$(OBJEXT) \
	LevelMenu.$(OBJEXT) LevelPackComposer.$(OBJEXT) \
	LevelPackConfig.$(OBJEXT) LevelPackMenu.$(OBJEXT) \
	LevelPreviewCache.$(OBJEXT) LevelWidget.$(OBJEXT) \
	LPGroupConfig.$(OBJEXT) MainMenu.$(OBJEXT) Menu.$(OBJEXT) \
	MonospacedLabel.$(OBJEXT) OptionsMenu.$(OBJEXT) \
	ScreenshotViewer.$(OBJEXT) SearchMenu.$(OBJEXT) \
	TextField.$(OBJEXT) widgets.$(OBJEXT) Index.$(OBJEXT) \
	RatingManager.$(OBJEXT) PersistentIndex.$(OBJEXT) \
	Proxy.$(OBJEXT) ScoreManager.$(OBJEXT) VolatileIndex.$(OBJEXT)
enigma_OBJECTS = $(am_enigma_OBJECTS)
@MINGW32_TRUE@am__DEPENDENCIES_1 = enigma_ico.o
enigma_DEPENDENCIES = $(top_builddir)/lib-src/enigma-core/libecl.a \
	$(top_builddir)/lib-src/lua/liblua.a \
	$(top_builddir)/lib-src/enet/libenet.a \
	$(top_builddir)/lib-src/oxydlib/liboxyd.a \
	$(top_builddir)/lib-src/zipios++/src/libzipios.a \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(enigma_SOURCES)
DIST_SOURCES = $(enigma_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
ALL_LINGUAS = @ALL_LINGUAS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILDTOOLS_FALSE = @BUILDTOOLS_FALSE@
BUILDTOOLS_TRUE = @BUILDTOOLS_TRUE@
BUILDTTF2BMF_FALSE = @BUILDTTF2BMF_FALSE@
BUILDTTF2BMF_TRUE = @BUILDTTF2BMF_TRUE@
BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@\
	-DSYSTEM_DATA_DIR=\"$(datadir)/enigma\" \
	-DLOCALEDIR=\"$(localedir_enigma)\" \
	-I$(top_srcdir)/lib-src/zipios++  \
	-I$(top_builddir)/lib-src/zipios++ \
	-I$(top_srcdir)/lib-src/lua \
	-I$(top_srcdir)/lib-src/enigma-core \
	-I$(top_srcdir)/lib-src/enet/include \
	-I$(top_srcdir)/lib-src \
	-I$(top_builddir)/intl @SDL_CFLAGS@

CXXLUA_FALSE = @CXXLUA_FALSE@
CXXLUA_TRUE = @CXXLUA_TRUE@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GENCAT = @GENCAT@
GLIBC21 = @GLIBC21@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
HAVE_ASPRINTF = @HAVE_ASPRINTF@
HAVE_POSIX_PRINTF = @HAVE_POSIX_PRINTF@
HAVE_SNPRINTF = @HAVE_SNPRINTF@
HAVE_WPRINTF = @HAVE_WPRINTF@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLBISON = @INTLBISON@
INTLLIBS = @INTLLIBS@
INTLOBJS = @INTLOBJS@
INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@
LDFLAGS = @LDFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LINUX_FALSE = @LINUX_FALSE@
LINUX_TRUE = @LINUX_TRUE@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MINGW32_FALSE = @MINGW32_FALSE@
MINGW32_TRUE = @MINGW32_TRUE@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGMERGE = @MSGMERGE@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POSUB = @POSUB@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TEXI2HTML = @TEXI2HTML@

# Rule for creating Lua interfaces from package descriptions using 'tolua'
TOLUA = @TOLUA@
USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
WINDRES = @WINDRES@
XGETTEXT = @XGETTEXT@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
EXTRA_DIST = \
	enigma.ico \
	enigma.rc \
	enigma.doxygen

enigma_SOURCES = \
	actors.hh 		\
	actors.cc 		\
	actors_internal.hh	\
	client.cc 		\
	client.hh 		\
	client_internal.hh	\
	DOMErrorReporter.hh     \
	DOMErrorReporter.cc     \
	DOMSchemaResolver.cc	\
	DOMSchemaResolver.hh	\
	d_models.cc 		\
	d_models.hh		\
	display.hh 		\
	display.cc 		\
	display_internal.hh	\
	d_engine.hh		\
	editor.cc 		\
	editor.hh 		\
	editor_impl.hh		\
	enigma.cc 		\
	enigma.hh		\
	errors.hh		\
	file.cc 		\
	file.hh 		\
	file_zip.cc 		\
	floors.cc 		\
	floors.hh		\
	fwd.hh			\
	game.cc			\
	game.hh			\
	Inventory.cc		\
	Inventory.hh		\
	ItemHolder.hh		\
	items.cc 		\
	items.hh		\
	laser.cc 		\
	laser.hh		\
	LocalToXML.cc		\
	LocalToXML.hh		\
	lua.cc 			\
	lua.hh			\
	lua-display.cc 		\
	lua-display.hh		\
	lua-editor.cc 		\
	lua-editor.hh		\
	lua-enigma.cc 		\
	lua-enigma.hh		\
	lua-global.cc 		\
	lua-global.hh		\
	lua-ecl.cc 		\
	lua-ecl.hh		\
	main.cc 		\
	main.hh			\
	netgame.cc 		\
	netgame.hh 		\
	network.cc		\
	network.hh		\
	nls.cc 			\
	nls.hh			\
	objects.cc 		\
	objects.hh 		\
	objects_decl.hh 	\
	oxyd.cc			\
	oxyd.hh 		\
	oxyd_internal.hh	\
	ox_extra.cc		\
	ox_magnum.cc		\
	ox_oxyd1.cc		\
	ox_peroxyd.cc		\
	options.cc 		\
	options.hh		\
	player.cc 		\
	player.hh		\
	PreferenceManager.cc	\
	PreferenceManager.hh	\
	PropertyManager.cc	\
	PropertyManager.hh	\
	server.cc 		\
	server.hh		\
	server_internal.hh	\
	sound.cc 		\
	sound.hh 		\
	sound_internal.hh	\
	StateManager.cc		\
	StateManager.hh		\
	stones.cc 		\
	stones.hh 		\
	stones_internal.hh 	\
	stones_simple.cc 	\
	stones_complex.cc  	\
	st_switches.cc		\
	Utf8ToXML.cc		\
	Utf8ToXML.hh		\
	util.cc 		\
	util.hh			\
	utilXML.cc		\
	utilXML.hh		\
	video.cc 		\
	video.hh		\
	world.cc 		\
	world.hh 		\
	world_internal.hh	\
	XMLtoLocal.cc		\
	XMLtoLocal.hh		\
	XMLtoUtf8.cc		\
	XMLtoUtf8.hh		\
	gui/ErrorMenu.cc	\
	gui/ErrorMenu.hh	\
	gui/GameMenu.cc		\
	gui/GameMenu.hh		\
	gui/HelpMenu.cc		\
	gui/HelpMenu.hh		\
	gui/InfoMenu.cc		\
	gui/InfoMenu.hh		\
	gui/LevelInspector.cc	\
	gui/LevelInspector.hh	\
	gui/LevelMenu.cc	\
	gui/LevelMenu.hh	\
	gui/LevelPackComposer.cc \
	gui/LevelPackComposer.hh \
	gui/LevelPackConfig.cc	\
	gui/LevelPackConfig.hh	\
	gui/LevelPackMenu.cc	\
	gui/LevelPackMenu.hh	\
	gui/LevelPreviewCache.cc \
	gui/LevelPreviewCache.hh \
	gui/LevelWidget.cc	\
	gui/LevelWidget.hh	\
	gui/LPGroupConfig.cc	\
	gui/LPGroupConfig.hh	\
	gui/MainMenu.cc		\
	gui/MainMenu.hh		\
	gui/Menu.cc		\
	gui/Menu.hh		\
	gui/MonospacedLabel.cc	\
	gui/MonospacedLabel.hh	\
	gui/OptionsMenu.cc	\
	gui/OptionsMenu.hh	\
	gui/ScreenshotViewer.cc	\
	gui/ScreenshotViewer.hh	\
	gui/SearchMenu.cc	\
	gui/SearchMenu.hh	\
	gui/TextField.cc	\
	gui/TextField.hh	\
	gui/widgets.cc		\
	gui/widgets.hh		\
	lev/Index.cc		\
	lev/Index.hh		\
	lev/RatingManager.cc	\
	lev/RatingManager.hh	\
	lev/PersistentIndex.cc	\
	lev/PersistentIndex.hh	\
	lev/Proxy.cc		\
	lev/Proxy.hh		\
	lev/ScoreManager.cc	\
	lev/ScoreManager.hh	\
	lev/VolatileIndex.cc	\
	lev/VolatileIndex.hh

@MINGW32_FALSE@localedir_enigma := $(datadir)/locale
@MINGW32_TRUE@localedir_enigma := data/locale
@MINGW32_FALSE@mingw_ldadd = 
@MINGW32_TRUE@mingw_ldadd := enigma_ico.o -lws2_32
enigma_LDADD = \
	@LIBINTL@ \
	$(top_builddir)/lib-src/enigma-core/libecl.a \
	$(top_builddir)/lib-src/lua/liblua.a \
	$(top_builddir)/lib-src/enet/libenet.a \
	$(top_builddir)/lib-src/oxydlib/liboxyd.a \
	$(top_builddir)/lib-src/zipios++/src/libzipios.a \
	-lz \
	$(mingw_ldadd) \
	@SDL_LIBS@


#------------------ Packaging rules for Mac OSX ------------------------
bundle_root := $(top_builddir)/etc/macfiles
bundle_name := $(bundle_root)/Enigma.app

# Special target to copy the doc files to the MacOS dmg staging area
bundle_doc := $(bundle_root)/Documentation

# Special target to create a binary linked with Mac OS X frameworks
static_prefix := `$(SDL_CONFIG) --prefix`
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
enigma$(EXEEXT): $(enigma_OBJECTS) $(enigma_DEPENDENCIES) 
	@rm -f enigma$(EXEEXT)
	$(CXXLINK) $(enigma_LDFLAGS) $(enigma_OBJECTS) $(enigma_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DOMErrorReporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DOMSchemaResolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ErrorMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GameMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HelpMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Index.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InfoMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Inventory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LPGroupConfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelInspector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelPackComposer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelPackConfig.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelPackMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelPreviewCache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LevelWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LocalToXML.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MainMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Menu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MonospacedLabel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OptionsMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PersistentIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PreferenceManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PropertyManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RatingManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScoreManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScreenshotViewer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SearchMenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StateManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TextField.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Utf8ToXML.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VolatileIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLtoLocal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLtoUtf8.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/d_models.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/editor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enigma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file_zip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/floors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/game.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/items.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/laser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-display.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-ecl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-editor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-enigma.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lua.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/netgame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/network.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nls.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/objects.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/options.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ox_extra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ox_magnum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ox_oxyd1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ox_peroxyd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oxyd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/player.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sound.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/st_switches.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stones.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stones_complex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stones_simple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utilXML.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/video.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/widgets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/world.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ErrorMenu.o: gui/ErrorMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ErrorMenu.o -MD -MP -MF "$(DEPDIR)/ErrorMenu.Tpo" -c -o ErrorMenu.o `test -f 'gui/ErrorMenu.cc' || echo '$(srcdir)/'`gui/ErrorMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ErrorMenu.Tpo" "$(DEPDIR)/ErrorMenu.Po"; else rm -f "$(DEPDIR)/ErrorMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/ErrorMenu.cc' object='ErrorMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ErrorMenu.o `test -f 'gui/ErrorMenu.cc' || echo '$(srcdir)/'`gui/ErrorMenu.cc

ErrorMenu.obj: gui/ErrorMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ErrorMenu.obj -MD -MP -MF "$(DEPDIR)/ErrorMenu.Tpo" -c -o ErrorMenu.obj `if test -f 'gui/ErrorMenu.cc'; then $(CYGPATH_W) 'gui/ErrorMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/ErrorMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ErrorMenu.Tpo" "$(DEPDIR)/ErrorMenu.Po"; else rm -f "$(DEPDIR)/ErrorMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/ErrorMenu.cc' object='ErrorMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ErrorMenu.obj `if test -f 'gui/ErrorMenu.cc'; then $(CYGPATH_W) 'gui/ErrorMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/ErrorMenu.cc'; fi`

GameMenu.o: gui/GameMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GameMenu.o -MD -MP -MF "$(DEPDIR)/GameMenu.Tpo" -c -o GameMenu.o `test -f 'gui/GameMenu.cc' || echo '$(srcdir)/'`gui/GameMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GameMenu.Tpo" "$(DEPDIR)/GameMenu.Po"; else rm -f "$(DEPDIR)/GameMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/GameMenu.cc' object='GameMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameMenu.o `test -f 'gui/GameMenu.cc' || echo '$(srcdir)/'`gui/GameMenu.cc

GameMenu.obj: gui/GameMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GameMenu.obj -MD -MP -MF "$(DEPDIR)/GameMenu.Tpo" -c -o GameMenu.obj `if test -f 'gui/GameMenu.cc'; then $(CYGPATH_W) 'gui/GameMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/GameMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/GameMenu.Tpo" "$(DEPDIR)/GameMenu.Po"; else rm -f "$(DEPDIR)/GameMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/GameMenu.cc' object='GameMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GameMenu.obj `if test -f 'gui/GameMenu.cc'; then $(CYGPATH_W) 'gui/GameMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/GameMenu.cc'; fi`

HelpMenu.o: gui/HelpMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HelpMenu.o -MD -MP -MF "$(DEPDIR)/HelpMenu.Tpo" -c -o HelpMenu.o `test -f 'gui/HelpMenu.cc' || echo '$(srcdir)/'`gui/HelpMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/HelpMenu.Tpo" "$(DEPDIR)/HelpMenu.Po"; else rm -f "$(DEPDIR)/HelpMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/HelpMenu.cc' object='HelpMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HelpMenu.o `test -f 'gui/HelpMenu.cc' || echo '$(srcdir)/'`gui/HelpMenu.cc

HelpMenu.obj: gui/HelpMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT HelpMenu.obj -MD -MP -MF "$(DEPDIR)/HelpMenu.Tpo" -c -o HelpMenu.obj `if test -f 'gui/HelpMenu.cc'; then $(CYGPATH_W) 'gui/HelpMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/HelpMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/HelpMenu.Tpo" "$(DEPDIR)/HelpMenu.Po"; else rm -f "$(DEPDIR)/HelpMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/HelpMenu.cc' object='HelpMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HelpMenu.obj `if test -f 'gui/HelpMenu.cc'; then $(CYGPATH_W) 'gui/HelpMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/HelpMenu.cc'; fi`

InfoMenu.o: gui/InfoMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InfoMenu.o -MD -MP -MF "$(DEPDIR)/InfoMenu.Tpo" -c -o InfoMenu.o `test -f 'gui/InfoMenu.cc' || echo '$(srcdir)/'`gui/InfoMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/InfoMenu.Tpo" "$(DEPDIR)/InfoMenu.Po"; else rm -f "$(DEPDIR)/InfoMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/InfoMenu.cc' object='InfoMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InfoMenu.o `test -f 'gui/InfoMenu.cc' || echo '$(srcdir)/'`gui/InfoMenu.cc

InfoMenu.obj: gui/InfoMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InfoMenu.obj -MD -MP -MF "$(DEPDIR)/InfoMenu.Tpo" -c -o InfoMenu.obj `if test -f 'gui/InfoMenu.cc'; then $(CYGPATH_W) 'gui/InfoMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/InfoMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/InfoMenu.Tpo" "$(DEPDIR)/InfoMenu.Po"; else rm -f "$(DEPDIR)/InfoMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/InfoMenu.cc' object='InfoMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InfoMenu.obj `if test -f 'gui/InfoMenu.cc'; then $(CYGPATH_W) 'gui/InfoMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/InfoMenu.cc'; fi`

LevelInspector.o: gui/LevelInspector.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelInspector.o -MD -MP -MF "$(DEPDIR)/LevelInspector.Tpo" -c -o LevelInspector.o `test -f 'gui/LevelInspector.cc' || echo '$(srcdir)/'`gui/LevelInspector.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelInspector.Tpo" "$(DEPDIR)/LevelInspector.Po"; else rm -f "$(DEPDIR)/LevelInspector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelInspector.cc' object='LevelInspector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelInspector.o `test -f 'gui/LevelInspector.cc' || echo '$(srcdir)/'`gui/LevelInspector.cc

LevelInspector.obj: gui/LevelInspector.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelInspector.obj -MD -MP -MF "$(DEPDIR)/LevelInspector.Tpo" -c -o LevelInspector.obj `if test -f 'gui/LevelInspector.cc'; then $(CYGPATH_W) 'gui/LevelInspector.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelInspector.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelInspector.Tpo" "$(DEPDIR)/LevelInspector.Po"; else rm -f "$(DEPDIR)/LevelInspector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelInspector.cc' object='LevelInspector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelInspector.obj `if test -f 'gui/LevelInspector.cc'; then $(CYGPATH_W) 'gui/LevelInspector.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelInspector.cc'; fi`

LevelMenu.o: gui/LevelMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelMenu.o -MD -MP -MF "$(DEPDIR)/LevelMenu.Tpo" -c -o LevelMenu.o `test -f 'gui/LevelMenu.cc' || echo '$(srcdir)/'`gui/LevelMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelMenu.Tpo" "$(DEPDIR)/LevelMenu.Po"; else rm -f "$(DEPDIR)/LevelMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelMenu.cc' object='LevelMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelMenu.o `test -f 'gui/LevelMenu.cc' || echo '$(srcdir)/'`gui/LevelMenu.cc

LevelMenu.obj: gui/LevelMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelMenu.obj -MD -MP -MF "$(DEPDIR)/LevelMenu.Tpo" -c -o LevelMenu.obj `if test -f 'gui/LevelMenu.cc'; then $(CYGPATH_W) 'gui/LevelMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelMenu.Tpo" "$(DEPDIR)/LevelMenu.Po"; else rm -f "$(DEPDIR)/LevelMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelMenu.cc' object='LevelMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelMenu.obj `if test -f 'gui/LevelMenu.cc'; then $(CYGPATH_W) 'gui/LevelMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelMenu.cc'; fi`

LevelPackComposer.o: gui/LevelPackComposer.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackComposer.o -MD -MP -MF "$(DEPDIR)/LevelPackComposer.Tpo" -c -o LevelPackComposer.o `test -f 'gui/LevelPackComposer.cc' || echo '$(srcdir)/'`gui/LevelPackComposer.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackComposer.Tpo" "$(DEPDIR)/LevelPackComposer.Po"; else rm -f "$(DEPDIR)/LevelPackComposer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackComposer.cc' object='LevelPackComposer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackComposer.o `test -f 'gui/LevelPackComposer.cc' || echo '$(srcdir)/'`gui/LevelPackComposer.cc

LevelPackComposer.obj: gui/LevelPackComposer.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackComposer.obj -MD -MP -MF "$(DEPDIR)/LevelPackComposer.Tpo" -c -o LevelPackComposer.obj `if test -f 'gui/LevelPackComposer.cc'; then $(CYGPATH_W) 'gui/LevelPackComposer.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackComposer.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackComposer.Tpo" "$(DEPDIR)/LevelPackComposer.Po"; else rm -f "$(DEPDIR)/LevelPackComposer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackComposer.cc' object='LevelPackComposer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackComposer.obj `if test -f 'gui/LevelPackComposer.cc'; then $(CYGPATH_W) 'gui/LevelPackComposer.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackComposer.cc'; fi`

LevelPackConfig.o: gui/LevelPackConfig.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackConfig.o -MD -MP -MF "$(DEPDIR)/LevelPackConfig.Tpo" -c -o LevelPackConfig.o `test -f 'gui/LevelPackConfig.cc' || echo '$(srcdir)/'`gui/LevelPackConfig.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackConfig.Tpo" "$(DEPDIR)/LevelPackConfig.Po"; else rm -f "$(DEPDIR)/LevelPackConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackConfig.cc' object='LevelPackConfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackConfig.o `test -f 'gui/LevelPackConfig.cc' || echo '$(srcdir)/'`gui/LevelPackConfig.cc

LevelPackConfig.obj: gui/LevelPackConfig.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackConfig.obj -MD -MP -MF "$(DEPDIR)/LevelPackConfig.Tpo" -c -o LevelPackConfig.obj `if test -f 'gui/LevelPackConfig.cc'; then $(CYGPATH_W) 'gui/LevelPackConfig.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackConfig.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackConfig.Tpo" "$(DEPDIR)/LevelPackConfig.Po"; else rm -f "$(DEPDIR)/LevelPackConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackConfig.cc' object='LevelPackConfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackConfig.obj `if test -f 'gui/LevelPackConfig.cc'; then $(CYGPATH_W) 'gui/LevelPackConfig.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackConfig.cc'; fi`

LevelPackMenu.o: gui/LevelPackMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackMenu.o -MD -MP -MF "$(DEPDIR)/LevelPackMenu.Tpo" -c -o LevelPackMenu.o `test -f 'gui/LevelPackMenu.cc' || echo '$(srcdir)/'`gui/LevelPackMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackMenu.Tpo" "$(DEPDIR)/LevelPackMenu.Po"; else rm -f "$(DEPDIR)/LevelPackMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackMenu.cc' object='LevelPackMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackMenu.o `test -f 'gui/LevelPackMenu.cc' || echo '$(srcdir)/'`gui/LevelPackMenu.cc

LevelPackMenu.obj: gui/LevelPackMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPackMenu.obj -MD -MP -MF "$(DEPDIR)/LevelPackMenu.Tpo" -c -o LevelPackMenu.obj `if test -f 'gui/LevelPackMenu.cc'; then $(CYGPATH_W) 'gui/LevelPackMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPackMenu.Tpo" "$(DEPDIR)/LevelPackMenu.Po"; else rm -f "$(DEPDIR)/LevelPackMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPackMenu.cc' object='LevelPackMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPackMenu.obj `if test -f 'gui/LevelPackMenu.cc'; then $(CYGPATH_W) 'gui/LevelPackMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPackMenu.cc'; fi`

LevelPreviewCache.o: gui/LevelPreviewCache.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPreviewCache.o -MD -MP -MF "$(DEPDIR)/LevelPreviewCache.Tpo" -c -o LevelPreviewCache.o `test -f 'gui/LevelPreviewCache.cc' || echo '$(srcdir)/'`gui/LevelPreviewCache.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPreviewCache.Tpo" "$(DEPDIR)/LevelPreviewCache.Po"; else rm -f "$(DEPDIR)/LevelPreviewCache.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPreviewCache.cc' object='LevelPreviewCache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPreviewCache.o `test -f 'gui/LevelPreviewCache.cc' || echo '$(srcdir)/'`gui/LevelPreviewCache.cc

LevelPreviewCache.obj: gui/LevelPreviewCache.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelPreviewCache.obj -MD -MP -MF "$(DEPDIR)/LevelPreviewCache.Tpo" -c -o LevelPreviewCache.obj `if test -f 'gui/LevelPreviewCache.cc'; then $(CYGPATH_W) 'gui/LevelPreviewCache.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPreviewCache.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelPreviewCache.Tpo" "$(DEPDIR)/LevelPreviewCache.Po"; else rm -f "$(DEPDIR)/LevelPreviewCache.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelPreviewCache.cc' object='LevelPreviewCache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelPreviewCache.obj `if test -f 'gui/LevelPreviewCache.cc'; then $(CYGPATH_W) 'gui/LevelPreviewCache.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelPreviewCache.cc'; fi`

LevelWidget.o: gui/LevelWidget.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelWidget.o -MD -MP -MF "$(DEPDIR)/LevelWidget.Tpo" -c -o LevelWidget.o `test -f 'gui/LevelWidget.cc' || echo '$(srcdir)/'`gui/LevelWidget.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelWidget.Tpo" "$(DEPDIR)/LevelWidget.Po"; else rm -f "$(DEPDIR)/LevelWidget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelWidget.cc' object='LevelWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelWidget.o `test -f 'gui/LevelWidget.cc' || echo '$(srcdir)/'`gui/LevelWidget.cc

LevelWidget.obj: gui/LevelWidget.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LevelWidget.obj -MD -MP -MF "$(DEPDIR)/LevelWidget.Tpo" -c -o LevelWidget.obj `if test -f 'gui/LevelWidget.cc'; then $(CYGPATH_W) 'gui/LevelWidget.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelWidget.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LevelWidget.Tpo" "$(DEPDIR)/LevelWidget.Po"; else rm -f "$(DEPDIR)/LevelWidget.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LevelWidget.cc' object='LevelWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LevelWidget.obj `if test -f 'gui/LevelWidget.cc'; then $(CYGPATH_W) 'gui/LevelWidget.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LevelWidget.cc'; fi`

LPGroupConfig.o: gui/LPGroupConfig.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LPGroupConfig.o -MD -MP -MF "$(DEPDIR)/LPGroupConfig.Tpo" -c -o LPGroupConfig.o `test -f 'gui/LPGroupConfig.cc' || echo '$(srcdir)/'`gui/LPGroupConfig.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LPGroupConfig.Tpo" "$(DEPDIR)/LPGroupConfig.Po"; else rm -f "$(DEPDIR)/LPGroupConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LPGroupConfig.cc' object='LPGroupConfig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LPGroupConfig.o `test -f 'gui/LPGroupConfig.cc' || echo '$(srcdir)/'`gui/LPGroupConfig.cc

LPGroupConfig.obj: gui/LPGroupConfig.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LPGroupConfig.obj -MD -MP -MF "$(DEPDIR)/LPGroupConfig.Tpo" -c -o LPGroupConfig.obj `if test -f 'gui/LPGroupConfig.cc'; then $(CYGPATH_W) 'gui/LPGroupConfig.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LPGroupConfig.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/LPGroupConfig.Tpo" "$(DEPDIR)/LPGroupConfig.Po"; else rm -f "$(DEPDIR)/LPGroupConfig.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/LPGroupConfig.cc' object='LPGroupConfig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LPGroupConfig.obj `if test -f 'gui/LPGroupConfig.cc'; then $(CYGPATH_W) 'gui/LPGroupConfig.cc'; else $(CYGPATH_W) '$(srcdir)/gui/LPGroupConfig.cc'; fi`

MainMenu.o: gui/MainMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MainMenu.o -MD -MP -MF "$(DEPDIR)/MainMenu.Tpo" -c -o MainMenu.o `test -f 'gui/MainMenu.cc' || echo '$(srcdir)/'`gui/MainMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/MainMenu.Tpo" "$(DEPDIR)/MainMenu.Po"; else rm -f "$(DEPDIR)/MainMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/MainMenu.cc' object='MainMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MainMenu.o `test -f 'gui/MainMenu.cc' || echo '$(srcdir)/'`gui/MainMenu.cc

MainMenu.obj: gui/MainMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MainMenu.obj -MD -MP -MF "$(DEPDIR)/MainMenu.Tpo" -c -o MainMenu.obj `if test -f 'gui/MainMenu.cc'; then $(CYGPATH_W) 'gui/MainMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/MainMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/MainMenu.Tpo" "$(DEPDIR)/MainMenu.Po"; else rm -f "$(DEPDIR)/MainMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/MainMenu.cc' object='MainMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MainMenu.obj `if test -f 'gui/MainMenu.cc'; then $(CYGPATH_W) 'gui/MainMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/MainMenu.cc'; fi`

Menu.o: gui/Menu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Menu.o -MD -MP -MF "$(DEPDIR)/Menu.Tpo" -c -o Menu.o `test -f 'gui/Menu.cc' || echo '$(srcdir)/'`gui/Menu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Menu.Tpo" "$(DEPDIR)/Menu.Po"; else rm -f "$(DEPDIR)/Menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/Menu.cc' object='Menu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Menu.o `test -f 'gui/Menu.cc' || echo '$(srcdir)/'`gui/Menu.cc

Menu.obj: gui/Menu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Menu.obj -MD -MP -MF "$(DEPDIR)/Menu.Tpo" -c -o Menu.obj `if test -f 'gui/Menu.cc'; then $(CYGPATH_W) 'gui/Menu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/Menu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Menu.Tpo" "$(DEPDIR)/Menu.Po"; else rm -f "$(DEPDIR)/Menu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/Menu.cc' object='Menu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Menu.obj `if test -f 'gui/Menu.cc'; then $(CYGPATH_W) 'gui/Menu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/Menu.cc'; fi`

MonospacedLabel.o: gui/MonospacedLabel.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MonospacedLabel.o -MD -MP -MF "$(DEPDIR)/MonospacedLabel.Tpo" -c -o MonospacedLabel.o `test -f 'gui/MonospacedLabel.cc' || echo '$(srcdir)/'`gui/MonospacedLabel.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/MonospacedLabel.Tpo" "$(DEPDIR)/MonospacedLabel.Po"; else rm -f "$(DEPDIR)/MonospacedLabel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/MonospacedLabel.cc' object='MonospacedLabel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MonospacedLabel.o `test -f 'gui/MonospacedLabel.cc' || echo '$(srcdir)/'`gui/MonospacedLabel.cc

MonospacedLabel.obj: gui/MonospacedLabel.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MonospacedLabel.obj -MD -MP -MF "$(DEPDIR)/MonospacedLabel.Tpo" -c -o MonospacedLabel.obj `if test -f 'gui/MonospacedLabel.cc'; then $(CYGPATH_W) 'gui/MonospacedLabel.cc'; else $(CYGPATH_W) '$(srcdir)/gui/MonospacedLabel.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/MonospacedLabel.Tpo" "$(DEPDIR)/MonospacedLabel.Po"; else rm -f "$(DEPDIR)/MonospacedLabel.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/MonospacedLabel.cc' object='MonospacedLabel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MonospacedLabel.obj `if test -f 'gui/MonospacedLabel.cc'; then $(CYGPATH_W) 'gui/MonospacedLabel.cc'; else $(CYGPATH_W) '$(srcdir)/gui/MonospacedLabel.cc'; fi`

OptionsMenu.o: gui/OptionsMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptionsMenu.o -MD -MP -MF "$(DEPDIR)/OptionsMenu.Tpo" -c -o OptionsMenu.o `test -f 'gui/OptionsMenu.cc' || echo '$(srcdir)/'`gui/OptionsMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/OptionsMenu.Tpo" "$(DEPDIR)/OptionsMenu.Po"; else rm -f "$(DEPDIR)/OptionsMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/OptionsMenu.cc' object='OptionsMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptionsMenu.o `test -f 'gui/OptionsMenu.cc' || echo '$(srcdir)/'`gui/OptionsMenu.cc

OptionsMenu.obj: gui/OptionsMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT OptionsMenu.obj -MD -MP -MF "$(DEPDIR)/OptionsMenu.Tpo" -c -o OptionsMenu.obj `if test -f 'gui/OptionsMenu.cc'; then $(CYGPATH_W) 'gui/OptionsMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/OptionsMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/OptionsMenu.Tpo" "$(DEPDIR)/OptionsMenu.Po"; else rm -f "$(DEPDIR)/OptionsMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/OptionsMenu.cc' object='OptionsMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OptionsMenu.obj `if test -f 'gui/OptionsMenu.cc'; then $(CYGPATH_W) 'gui/OptionsMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/OptionsMenu.cc'; fi`

ScreenshotViewer.o: gui/ScreenshotViewer.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScreenshotViewer.o -MD -MP -MF "$(DEPDIR)/ScreenshotViewer.Tpo" -c -o ScreenshotViewer.o `test -f 'gui/ScreenshotViewer.cc' || echo '$(srcdir)/'`gui/ScreenshotViewer.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ScreenshotViewer.Tpo" "$(DEPDIR)/ScreenshotViewer.Po"; else rm -f "$(DEPDIR)/ScreenshotViewer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/ScreenshotViewer.cc' object='ScreenshotViewer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScreenshotViewer.o `test -f 'gui/ScreenshotViewer.cc' || echo '$(srcdir)/'`gui/ScreenshotViewer.cc

ScreenshotViewer.obj: gui/ScreenshotViewer.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScreenshotViewer.obj -MD -MP -MF "$(DEPDIR)/ScreenshotViewer.Tpo" -c -o ScreenshotViewer.obj `if test -f 'gui/ScreenshotViewer.cc'; then $(CYGPATH_W) 'gui/ScreenshotViewer.cc'; else $(CYGPATH_W) '$(srcdir)/gui/ScreenshotViewer.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ScreenshotViewer.Tpo" "$(DEPDIR)/ScreenshotViewer.Po"; else rm -f "$(DEPDIR)/ScreenshotViewer.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/ScreenshotViewer.cc' object='ScreenshotViewer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScreenshotViewer.obj `if test -f 'gui/ScreenshotViewer.cc'; then $(CYGPATH_W) 'gui/ScreenshotViewer.cc'; else $(CYGPATH_W) '$(srcdir)/gui/ScreenshotViewer.cc'; fi`

SearchMenu.o: gui/SearchMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SearchMenu.o -MD -MP -MF "$(DEPDIR)/SearchMenu.Tpo" -c -o SearchMenu.o `test -f 'gui/SearchMenu.cc' || echo '$(srcdir)/'`gui/SearchMenu.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SearchMenu.Tpo" "$(DEPDIR)/SearchMenu.Po"; else rm -f "$(DEPDIR)/SearchMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/SearchMenu.cc' object='SearchMenu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SearchMenu.o `test -f 'gui/SearchMenu.cc' || echo '$(srcdir)/'`gui/SearchMenu.cc

SearchMenu.obj: gui/SearchMenu.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SearchMenu.obj -MD -MP -MF "$(DEPDIR)/SearchMenu.Tpo" -c -o SearchMenu.obj `if test -f 'gui/SearchMenu.cc'; then $(CYGPATH_W) 'gui/SearchMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/SearchMenu.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SearchMenu.Tpo" "$(DEPDIR)/SearchMenu.Po"; else rm -f "$(DEPDIR)/SearchMenu.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/SearchMenu.cc' object='SearchMenu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SearchMenu.obj `if test -f 'gui/SearchMenu.cc'; then $(CYGPATH_W) 'gui/SearchMenu.cc'; else $(CYGPATH_W) '$(srcdir)/gui/SearchMenu.cc'; fi`

TextField.o: gui/TextField.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextField.o -MD -MP -MF "$(DEPDIR)/TextField.Tpo" -c -o TextField.o `test -f 'gui/TextField.cc' || echo '$(srcdir)/'`gui/TextField.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TextField.Tpo" "$(DEPDIR)/TextField.Po"; else rm -f "$(DEPDIR)/TextField.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/TextField.cc' object='TextField.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextField.o `test -f 'gui/TextField.cc' || echo '$(srcdir)/'`gui/TextField.cc

TextField.obj: gui/TextField.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TextField.obj -MD -MP -MF "$(DEPDIR)/TextField.Tpo" -c -o TextField.obj `if test -f 'gui/TextField.cc'; then $(CYGPATH_W) 'gui/TextField.cc'; else $(CYGPATH_W) '$(srcdir)/gui/TextField.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TextField.Tpo" "$(DEPDIR)/TextField.Po"; else rm -f "$(DEPDIR)/TextField.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/TextField.cc' object='TextField.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextField.obj `if test -f 'gui/TextField.cc'; then $(CYGPATH_W) 'gui/TextField.cc'; else $(CYGPATH_W) '$(srcdir)/gui/TextField.cc'; fi`

widgets.o: gui/widgets.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT widgets.o -MD -MP -MF "$(DEPDIR)/widgets.Tpo" -c -o widgets.o `test -f 'gui/widgets.cc' || echo '$(srcdir)/'`gui/widgets.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/widgets.Tpo" "$(DEPDIR)/widgets.Po"; else rm -f "$(DEPDIR)/widgets.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/widgets.cc' object='widgets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o widgets.o `test -f 'gui/widgets.cc' || echo '$(srcdir)/'`gui/widgets.cc

widgets.obj: gui/widgets.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT widgets.obj -MD -MP -MF "$(DEPDIR)/widgets.Tpo" -c -o widgets.obj `if test -f 'gui/widgets.cc'; then $(CYGPATH_W) 'gui/widgets.cc'; else $(CYGPATH_W) '$(srcdir)/gui/widgets.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/widgets.Tpo" "$(DEPDIR)/widgets.Po"; else rm -f "$(DEPDIR)/widgets.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gui/widgets.cc' object='widgets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o widgets.obj `if test -f 'gui/widgets.cc'; then $(CYGPATH_W) 'gui/widgets.cc'; else $(CYGPATH_W) '$(srcdir)/gui/widgets.cc'; fi`

Index.o: lev/Index.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Index.o -MD -MP -MF "$(DEPDIR)/Index.Tpo" -c -o Index.o `test -f 'lev/Index.cc' || echo '$(srcdir)/'`lev/Index.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Index.Tpo" "$(DEPDIR)/Index.Po"; else rm -f "$(DEPDIR)/Index.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/Index.cc' object='Index.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Index.o `test -f 'lev/Index.cc' || echo '$(srcdir)/'`lev/Index.cc

Index.obj: lev/Index.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Index.obj -MD -MP -MF "$(DEPDIR)/Index.Tpo" -c -o Index.obj `if test -f 'lev/Index.cc'; then $(CYGPATH_W) 'lev/Index.cc'; else $(CYGPATH_W) '$(srcdir)/lev/Index.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Index.Tpo" "$(DEPDIR)/Index.Po"; else rm -f "$(DEPDIR)/Index.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/Index.cc' object='Index.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Index.obj `if test -f 'lev/Index.cc'; then $(CYGPATH_W) 'lev/Index.cc'; else $(CYGPATH_W) '$(srcdir)/lev/Index.cc'; fi`

RatingManager.o: lev/RatingManager.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RatingManager.o -MD -MP -MF "$(DEPDIR)/RatingManager.Tpo" -c -o RatingManager.o `test -f 'lev/RatingManager.cc' || echo '$(srcdir)/'`lev/RatingManager.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/RatingManager.Tpo" "$(DEPDIR)/RatingManager.Po"; else rm -f "$(DEPDIR)/RatingManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/RatingManager.cc' object='RatingManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RatingManager.o `test -f 'lev/RatingManager.cc' || echo '$(srcdir)/'`lev/RatingManager.cc

RatingManager.obj: lev/RatingManager.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RatingManager.obj -MD -MP -MF "$(DEPDIR)/RatingManager.Tpo" -c -o RatingManager.obj `if test -f 'lev/RatingManager.cc'; then $(CYGPATH_W) 'lev/RatingManager.cc'; else $(CYGPATH_W) '$(srcdir)/lev/RatingManager.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/RatingManager.Tpo" "$(DEPDIR)/RatingManager.Po"; else rm -f "$(DEPDIR)/RatingManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/RatingManager.cc' object='RatingManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RatingManager.obj `if test -f 'lev/RatingManager.cc'; then $(CYGPATH_W) 'lev/RatingManager.cc'; else $(CYGPATH_W) '$(srcdir)/lev/RatingManager.cc'; fi`

PersistentIndex.o: lev/PersistentIndex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PersistentIndex.o -MD -MP -MF "$(DEPDIR)/PersistentIndex.Tpo" -c -o PersistentIndex.o `test -f 'lev/PersistentIndex.cc' || echo '$(srcdir)/'`lev/PersistentIndex.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PersistentIndex.Tpo" "$(DEPDIR)/PersistentIndex.Po"; else rm -f "$(DEPDIR)/PersistentIndex.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/PersistentIndex.cc' object='PersistentIndex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PersistentIndex.o `test -f 'lev/PersistentIndex.cc' || echo '$(srcdir)/'`lev/PersistentIndex.cc

PersistentIndex.obj: lev/PersistentIndex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PersistentIndex.obj -MD -MP -MF "$(DEPDIR)/PersistentIndex.Tpo" -c -o PersistentIndex.obj `if test -f 'lev/PersistentIndex.cc'; then $(CYGPATH_W) 'lev/PersistentIndex.cc'; else $(CYGPATH_W) '$(srcdir)/lev/PersistentIndex.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/PersistentIndex.Tpo" "$(DEPDIR)/PersistentIndex.Po"; else rm -f "$(DEPDIR)/PersistentIndex.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/PersistentIndex.cc' object='PersistentIndex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PersistentIndex.obj `if test -f 'lev/PersistentIndex.cc'; then $(CYGPATH_W) 'lev/PersistentIndex.cc'; else $(CYGPATH_W) '$(srcdir)/lev/PersistentIndex.cc'; fi`

Proxy.o: lev/Proxy.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Proxy.o -MD -MP -MF "$(DEPDIR)/Proxy.Tpo" -c -o Proxy.o `test -f 'lev/Proxy.cc' || echo '$(srcdir)/'`lev/Proxy.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Proxy.Tpo" "$(DEPDIR)/Proxy.Po"; else rm -f "$(DEPDIR)/Proxy.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/Proxy.cc' object='Proxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Proxy.o `test -f 'lev/Proxy.cc' || echo '$(srcdir)/'`lev/Proxy.cc

Proxy.obj: lev/Proxy.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Proxy.obj -MD -MP -MF "$(DEPDIR)/Proxy.Tpo" -c -o Proxy.obj `if test -f 'lev/Proxy.cc'; then $(CYGPATH_W) 'lev/Proxy.cc'; else $(CYGPATH_W) '$(srcdir)/lev/Proxy.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Proxy.Tpo" "$(DEPDIR)/Proxy.Po"; else rm -f "$(DEPDIR)/Proxy.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/Proxy.cc' object='Proxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Proxy.obj `if test -f 'lev/Proxy.cc'; then $(CYGPATH_W) 'lev/Proxy.cc'; else $(CYGPATH_W) '$(srcdir)/lev/Proxy.cc'; fi`

ScoreManager.o: lev/ScoreManager.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScoreManager.o -MD -MP -MF "$(DEPDIR)/ScoreManager.Tpo" -c -o ScoreManager.o `test -f 'lev/ScoreManager.cc' || echo '$(srcdir)/'`lev/ScoreManager.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ScoreManager.Tpo" "$(DEPDIR)/ScoreManager.Po"; else rm -f "$(DEPDIR)/ScoreManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/ScoreManager.cc' object='ScoreManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScoreManager.o `test -f 'lev/ScoreManager.cc' || echo '$(srcdir)/'`lev/ScoreManager.cc

ScoreManager.obj: lev/ScoreManager.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScoreManager.obj -MD -MP -MF "$(DEPDIR)/ScoreManager.Tpo" -c -o ScoreManager.obj `if test -f 'lev/ScoreManager.cc'; then $(CYGPATH_W) 'lev/ScoreManager.cc'; else $(CYGPATH_W) '$(srcdir)/lev/ScoreManager.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ScoreManager.Tpo" "$(DEPDIR)/ScoreManager.Po"; else rm -f "$(DEPDIR)/ScoreManager.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/ScoreManager.cc' object='ScoreManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScoreManager.obj `if test -f 'lev/ScoreManager.cc'; then $(CYGPATH_W) 'lev/ScoreManager.cc'; else $(CYGPATH_W) '$(srcdir)/lev/ScoreManager.cc'; fi`

VolatileIndex.o: lev/VolatileIndex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VolatileIndex.o -MD -MP -MF "$(DEPDIR)/VolatileIndex.Tpo" -c -o VolatileIndex.o `test -f 'lev/VolatileIndex.cc' || echo '$(srcdir)/'`lev/VolatileIndex.cc; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/VolatileIndex.Tpo" "$(DEPDIR)/VolatileIndex.Po"; else rm -f "$(DEPDIR)/VolatileIndex.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/VolatileIndex.cc' object='VolatileIndex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VolatileIndex.o `test -f 'lev/VolatileIndex.cc' || echo '$(srcdir)/'`lev/VolatileIndex.cc

VolatileIndex.obj: lev/VolatileIndex.cc
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT VolatileIndex.obj -MD -MP -MF "$(DEPDIR)/VolatileIndex.Tpo" -c -o VolatileIndex.obj `if test -f 'lev/VolatileIndex.cc'; then $(CYGPATH_W) 'lev/VolatileIndex.cc'; else $(CYGPATH_W) '$(srcdir)/lev/VolatileIndex.cc'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/VolatileIndex.Tpo" "$(DEPDIR)/VolatileIndex.Po"; else rm -f "$(DEPDIR)/VolatileIndex.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lev/VolatileIndex.cc' object='VolatileIndex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VolatileIndex.obj `if test -f 'lev/VolatileIndex.cc'; then $(CYGPATH_W) 'lev/VolatileIndex.cc'; else $(CYGPATH_W) '$(srcdir)/lev/VolatileIndex.cc'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

@MINGW32_TRUE@  enigma_ico.o: enigma.rc enigma.ico
@MINGW32_TRUE@	$(WINDRES) $(srcdir)/enigma.rc --include-dir=$(srcdir) -O coff -o enigma_ico.o
.PHONY: tolua
tolua:
	@if [ "x${TOLUA}" != "x" ]; then \
		echo "Running ${TOLUA}..."; \
		${TOLUA} -H lua-display.hh -n display -o lua-display.cc display-lua.pkg; \
		${TOLUA} -H lua-editor.hh -n editor -o lua-editor.cc editor-lua.pkg; \
		${TOLUA} -H lua-enigma.hh -n enigma -o lua-enigma.cc enigma-lua.pkg; \
		${TOLUA} -H lua-global.hh -n global -o lua-global.cc global-lua.pkg; \
		${TOLUA} -H lua-ecl.hh -n px -o lua-ecl.cc ecl-lua.pkg; \
	else \
		echo "$<:0: Warning: Can't update lua interface - tolua not installed "; \
	fi
# Special target to copy all needed game files to Enigma.app/Contents/Resources.
# For Mac OS X bundle.
.PHONY: bundle
bundle:
	-rm -rf $(bundle_root)
	mkdir -p $(bundle_name)/Contents/MacOS
	mkdir -p $(bundle_name)/Contents/Resources/data/
	echo "APPL????" > $(bundle_name)/Contents/PkgInfo
	cp $(top_builddir)/etc/Info.plist $(bundle_name)/Contents/
	cp $(top_builddir)/etc/enigma.icns $(bundle_name)/Contents/Resources/
	tar --exclude .svn -c -f - -C $(top_builddir)/data levels | tar xpf - -C $(bundle_name)/Contents/Resources/data
	cp $(top_builddir)/data/*.lua $(bundle_name)/Contents/Resources/data/
	cp $(top_builddir)/data/*.xml $(bundle_name)/Contents/Resources/data/
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx
	cp $(top_builddir)/data/gfx/*.png $(bundle_name)/Contents/Resources/data/gfx
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx32
	cp $(top_builddir)/data/gfx32/*.png $(bundle_name)/Contents/Resources/data/gfx32
	cp $(top_builddir)/data/gfx32/*.jpg $(bundle_name)/Contents/Resources/data/gfx32
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx40
	cp $(top_builddir)/data/gfx40/*.png $(bundle_name)/Contents/Resources/data/gfx40
	cp $(top_builddir)/data/gfx40/*.jpg $(bundle_name)/Contents/Resources/data/gfx40
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx48
	cp $(top_builddir)/data/gfx48/*.png $(bundle_name)/Contents/Resources/data/gfx48
	cp $(top_builddir)/data/gfx48/*.jpg $(bundle_name)/Contents/Resources/data/gfx48
	mkdir -p $(bundle_name)/Contents/Resources/data/schemas
	cp $(top_builddir)/data/schemas/*.xml $(bundle_name)/Contents/Resources/data/schemas
	cp $(top_builddir)/data/schemas/*.xsd $(bundle_name)/Contents/Resources/data/schemas
	mkdir -p $(bundle_name)/Contents/Resources/data/sound
	cp $(top_builddir)/data/sound/*.s3m $(bundle_name)/Contents/Resources/data/sound
	mkdir -p $(bundle_name)/Contents/Resources/data/soundsets
	mkdir -p $(bundle_name)/Contents/Resources/data/soundsets/enigma
	cp $(top_builddir)/data/soundsets/enigma/*.wav $(bundle_name)/Contents/Resources/data/soundsets/enigma
	mkdir -p $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.png $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.bmf $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.ttf $(bundle_name)/Contents/Resources/data/fonts
	mkdir -p $(bundle_name)/Contents/Frameworks
	cp -R /Library/Frameworks/SDL.framework $(bundle_name)/Contents/Frameworks/
	cp -R /Library/Frameworks/SDL_image.framework $(bundle_name)/Contents/Frameworks/
	cp -R /Library/Frameworks/SDL_mixer.framework $(bundle_name)/Contents/Frameworks/
	cp -R /Library/Frameworks/SDL_ttf.framework $(bundle_name)/Contents/Frameworks/
	for cat in $(ALL_LINGUAS); do \
	  dir=$(bundle_name)/Contents/Resources/locale/$$cat/LC_MESSAGES; \
	  mkdir -p $$dir; \
	  echo "installing $$cat as $$dir/enigma.mo"; \
	  cp $(top_builddir)/po/$$cat.gmo $$dir/enigma.mo; \
	done

# Special target to copy the binary to Enigma.app/Contents/MacOS.
.PHONY: bundle-fw
bundle-fw: enigma-fw-mosx
	cp enigma-fw $(bundle_name)/Contents/MacOS/enigma
	strip $(bundle_name)/Contents/MacOS/enigma
.PHONY: bundle-doc
bundle-doc:
	-rm -rf $(bundle_doc)
	mkdir -p $(bundle_doc)/images/flags25x15
	mkdir -p $(bundle_doc)/reference/images
	mkdir -p $(bundle_doc)/manual/images
	cp $(top_builddir)/README $(bundle_doc)/
	cp $(top_builddir)/COPYING $(bundle_doc)/
	cp $(top_builddir)/CHANGES $(bundle_doc)/
	cp $(top_builddir)/ACKNOWLEDGEMENTS $(bundle_doc)/
	cp $(top_builddir)/etc/README-SDL.txt $(bundle_doc)/
	cp $(top_builddir)/doc/index.html $(bundle_doc)/
	( cd $(bundle_root) ; ln -s ./Documentation/index.html index.html )
	cp $(top_builddir)/doc/gpl.txt $(bundle_doc)/
	cp $(top_builddir)/doc/lgpl.txt $(bundle_doc)/
	cp $(top_builddir)/doc/images/enigma.css $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_enigma.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_cornerul.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_cornerur.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/favicon.png $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/menu_bg.jpg $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/flags25x15/*.png $(bundle_doc)/images/flags25x15/
	cp $(top_builddir)/doc/reference/ant_lua.txt $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/sounds.txt $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/soundset.lua $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/lua2xml $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/xml2lua $(bundle_doc)/reference/
	cp $(top_builddir)/doc/manual/images/*.png $(bundle_doc)/manual/images/
	cp $(top_builddir)/doc/manual/*.html $(bundle_doc)/manual/
	cp $(top_builddir)/doc/reference/images/*.png $(bundle_doc)/reference/images/
	cp $(top_builddir)/doc/reference/*.html $(bundle_doc)/reference/
.PHONY: enigma-fw-mosx
enigma-fw-mosx: $(enigma_OBJECTS) $(enigma_DEPENDENCIES)
	$(CXX) $(LDFLAGS) -o enigma-fw $(enigma_OBJECTS) $(enigma_DEPENDENCIES) $(static_prefix)/lib/libintl.a $(static_prefix)/lib/libxerces-c.a /usr/lib/libiconv.dylib -L$(static_prefix)/lib -lsdlmain -lz -framework SDL -framework SDL_image -framework SDL_mixer -framework Cocoa -framework OpenGL -framework SDL_ttf $(static_prefix)/lib/libpng.a 

# Special target to make a disk image of the bundled app
.PHONY: bundle-dmg
bundle-dmg:
	hdiutil create  -ov -srcfolder $(bundle_root) -volname Enigma -imagekey zlib-level=6 $(top_builddir)/etc/enigma.dmg
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
